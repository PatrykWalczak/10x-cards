name: Test & Build Master

# Uruchamianie na push do main oraz manualnie
on:
  push:
    branches:
      - main
  workflow_dispatch:

    inputs:
      run_tests:
        description: 'Uruchom testy'
        type: boolean
        required: false
        default: true
      run_build:
        description: 'Uruchom build produkcyjny'
        type: boolean
        required: false
        default: true

jobs:
  # Job 1: Linting i formatowanie kodu
  lint:
    name: üîç Code Quality
    runs-on: ubuntu-latest
    steps:
      - name: Setup Node.js and Dependencies
        uses: ./.github/actions/setup-node-dependencies

      - name: Run ESLint
        run: npm run lint

      - name: Check formatting
        run: npx prettier --check .

  # Job 2: Uruchomienie test√≥w jednostkowych
  test:
    name: üß™ Unit Tests
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' || (github.event_name == 'workflow_dispatch' && inputs.run_tests) }}
    steps:
      - name: Setup Node.js and Dependencies
        uses: ./.github/actions/setup-node-dependencies

      - name: Run tests with coverage
        run: npm run test:coverage

      - name: Upload coverage reports
        uses: codecov/codecov-action@v5
        if: always()
        with:
          file: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

  # Job 3: Build produkcyjny
  build:
    name: üèóÔ∏è Production Build
    runs-on: ubuntu-latest
    needs: [lint]
    if: ${{ github.event_name == 'push' || (github.event_name == 'workflow_dispatch' && inputs.run_build) }}
    steps:
      - name: Setup Node.js and Dependencies
        uses: ./.github/actions/setup-node-dependencies

      - name: Build production
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-files
          path: dist/
          retention-days: 7

  # Job 4: Sprawdzenie bezpiecze≈Ñstwa dependencji
  security:
    name: üîí Security Audit
    runs-on: ubuntu-latest
    steps:
      - name: Setup Node.js and Dependencies
        uses: ./.github/actions/setup-node-dependencies

      - name: Run security audit
        run: npm audit --audit-level high

  # Job 5: Podsumowanie i notyfikacja o statusie
  summary:
    name: üìä Pipeline Summary
    runs-on: ubuntu-latest
    needs: [lint, test, build, security]
    if: always()
    steps:
      - name: Pipeline Status
        run: |
          echo "## üìä Pipeline Summary" >> $GITHUB_STEP_SUMMARY
          echo "| Job | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|-----|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| Code Quality | ${{ needs.lint.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Unit Tests | ${{ needs.test.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Production Build | ${{ needs.build.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Security Audit | ${{ needs.security.result }} |" >> $GITHUB_STEP_SUMMARY
          
          if [[ "${{ needs.lint.result }}" == "failure" || "${{ needs.test.result }}" == "failure" || "${{ needs.build.result }}" == "failure" || "${{ needs.security.result }}" == "failure" ]]; then
            echo "‚ùå Pipeline failed - check individual jobs for details"
            exit 1
          else
            echo "‚úÖ All pipeline jobs completed successfully!"
          fi